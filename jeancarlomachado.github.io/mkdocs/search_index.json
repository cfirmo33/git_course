{
    "docs": [
        {
            "location": "/",
            "text": "Git \"the stupid content tracker\"\n\n\n\n\nPra que git serve?\n\n\nHistoria\n\n\nLista de comandos\n\n\nConceitos do git",
            "title": "Home"
        },
        {
            "location": "/#git-the-stupid-content-tracker",
            "text": "Pra que git serve?  Historia  Lista de comandos  Conceitos do git",
            "title": "Git \"the stupid content tracker\""
        },
        {
            "location": "/historia/",
            "text": "Motivo\n\n\nGit foi criado em 2005 por Linus Torvalds, o criador do Linux.\nA motiva\u00e7\u00e3o de criar o Git foi porqu\u00ea o CVS anterior (SVN) era\nmuito lento para comportar o trabalho do kernel.\n\n\nAlguns significados para o termo:\n - \"global information tracker\"\n - \"goddamn idiotic truckload of sh*t\"\n\n\nPontos-chave no design:\n\n\n\n\nVelocidade\n\n\nDesign Simples\n\n\nSuporte a desenvolvimento n\u00e3o-linear (branches)\n\n\nTotalmente distribu\u00eddo\n\n\nCapaz de lidar com projetos gigantes",
            "title": "Hist\u00f3ria"
        },
        {
            "location": "/historia/#motivo",
            "text": "Git foi criado em 2005 por Linus Torvalds, o criador do Linux.\nA motiva\u00e7\u00e3o de criar o Git foi porqu\u00ea o CVS anterior (SVN) era\nmuito lento para comportar o trabalho do kernel.  Alguns significados para o termo:\n - \"global information tracker\"\n - \"goddamn idiotic truckload of sh*t\"",
            "title": "Motivo"
        },
        {
            "location": "/historia/#pontos-chave-no-design",
            "text": "Velocidade  Design Simples  Suporte a desenvolvimento n\u00e3o-linear (branches)  Totalmente distribu\u00eddo  Capaz de lidar com projetos gigantes",
            "title": "Pontos-chave no design:"
        },
        {
            "location": "/pra-que-serve/",
            "text": "Git serve para recuperar informa\u00e7\u00e3o\n\n\ngit log\nrm -rf docs\nbrowser http://localhost:8000\ngit reset --hard HEAD\nbrowser http://localhost:8000\n\n\n\n\n\nGit serve para versionar informa\u00e7\u00f5es\n\n\nCriando\n\n\necho \"Historia do git\" >docs/historia.md\necho \"[Historia](historia.md)\" >>docs/index.md\ngit add .\ngit commit  -m \"adicionado arquivos sobre historia\"\necho \"Git foi criado em 2005 por Linus Torvalds, o criador do Linux\" >>docs/historia.md\ngit commit -a -m \"detalhes sobre a historia\"\n\n\n\n\n\nDesfazendo\n\n\ngit checkout HEAD~1 docs/historia.md\ngit checkout HEAD docs/historia.md\n\n\n\n\nGit tamb\u00e9m serve para:\n\n\n\n\nTrabalhar em m\u00faltiplas tarefas concorrentemente\n\n\nTrabalhar com m\u00faltiplas equipes concorrentemente\n\n\nPode-se versionar todo tipo de informa\u00e7\u00e3o: projetos de software,\n  livros, tcc's, etc.",
            "title": "Pra que serve"
        },
        {
            "location": "/pra-que-serve/#git-serve-para-recuperar-informacao",
            "text": "git log\nrm -rf docs\nbrowser http://localhost:8000\ngit reset --hard HEAD\nbrowser http://localhost:8000",
            "title": "Git serve para recuperar informa\u00e7\u00e3o"
        },
        {
            "location": "/pra-que-serve/#git-serve-para-versionar-informacoes",
            "text": "",
            "title": "Git serve para versionar informa\u00e7\u00f5es"
        },
        {
            "location": "/pra-que-serve/#criando",
            "text": "echo \"Historia do git\" >docs/historia.md\necho \"[Historia](historia.md)\" >>docs/index.md\ngit add .\ngit commit  -m \"adicionado arquivos sobre historia\"\necho \"Git foi criado em 2005 por Linus Torvalds, o criador do Linux\" >>docs/historia.md\ngit commit -a -m \"detalhes sobre a historia\"",
            "title": "Criando"
        },
        {
            "location": "/pra-que-serve/#desfazendo",
            "text": "git checkout HEAD~1 docs/historia.md\ngit checkout HEAD docs/historia.md  Git tamb\u00e9m serve para:   Trabalhar em m\u00faltiplas tarefas concorrentemente  Trabalhar com m\u00faltiplas equipes concorrentemente  Pode-se versionar todo tipo de informa\u00e7\u00e3o: projetos de software,\n  livros, tcc's, etc.",
            "title": "Desfazendo"
        },
        {
            "location": "/comandos/",
            "text": "Lista de Comandos\n\n\nGit conta com v\u00e1rios comandos, a lista completa se encontra em\n/lib/git-core.\n\n\nPara mais detalhes do que como cada um opera pode utilizar\n\n\nman git commando\ngit commando --help\n\n\n\n\n\nComandos existentes\n\n\n\n\ngit\n\n\nadd\n\n\nadd--interactive\n\n\nam\n\n\nannotate\n\n\napply\n\n\narchimport\n\n\narchive\n\n\nbisect\n\n\nbisect--helper\n\n\nblame\n\n\nbranch\n\n\nbundle\n\n\ncat-file\n\n\ncheck-attr\n\n\ncheck-ignore\n\n\ncheck-mailmap\n\n\ncheckout\n\n\ncheckout-index\n\n\ncheck-ref-format\n\n\ncherry\n\n\ncherry-pick\n\n\ncitool\n\n\nclean\n\n\nclone\n\n\ncolumn\n\n\ncommit\n\n\ncommit-tree\n\n\nconfig\n\n\ncount-objects\n\n\ncredential\n\n\ncredential-cache\n\n\ncredential-cache--daemon\n\n\ncredential-gnome-keyring\n\n\ncredential-libsecret\n\n\ncredential-store\n\n\ncvsexportcommit\n\n\ncvsimport\n\n\ncvsserver\n\n\ndaemon\n\n\ndescribe\n\n\ndiff\n\n\ndiff-files\n\n\ndiff-index\n\n\ndifftool\n\n\ndifftool--helper\n\n\ndiff-tree\n\n\ndraw\n\n\nfast-export\n\n\nfast-import\n\n\nfetch\n\n\nfetch-pack\n\n\nfilter-branch\n\n\nfmt-merge-msg\n\n\nfor-each-ref\n\n\nformat-patch\n\n\nfsck\n\n\nfsck-objects\n\n\ngc\n\n\nget-tar-commit-id\n\n\ngrep\n\n\ngui\n\n\ngui--askpass\n\n\nhash-object\n\n\nhelp\n\n\nhttp-backend\n\n\nhttp-fetch\n\n\nhttp-push\n\n\nimap-send\n\n\nindex-pack\n\n\ninit\n\n\ninit-db\n\n\ninstaweb\n\n\ninterpret-trailers\n\n\nlog\n\n\nls-files\n\n\nls-remote\n\n\nls-tree\n\n\nmailinfo\n\n\nmailsplit\n\n\nmerge\n\n\nmerge-base\n\n\nmerge-file\n\n\nmerge-index\n\n\nmerge-octopus\n\n\nmerge-one-file\n\n\nmerge-ours\n\n\nmerge-recursive\n\n\nmerge-resolve\n\n\nmerge-subtree\n\n\nmergetool\n\n\nmergetool--lib\n\n\nmerge-tree\n\n\nmktag\n\n\nmktree\n\n\nmv\n\n\nname-rev\n\n\nnotes\n\n\np4\n\n\npack-objects\n\n\npack-redundant\n\n\npack-refs\n\n\nparse-remote\n\n\npatch-id\n\n\nprune\n\n\nprune-packed\n\n\npull\n\n\npush\n\n\nquiltimport\n\n\nread-tree\n\n\nrebase\n\n\nrebase--am\n\n\nrebase--interactive\n\n\nrebase--merge\n\n\nreceive-pack\n\n\nreflog\n\n\nremote\n\n\nremote-ext\n\n\nremote-fd\n\n\nremote-ftp\n\n\nremote-ftps\n\n\nremote-http\n\n\nremote-https\n\n\nremote-testsvn\n\n\nrepack\n\n\nreplace\n\n\nrequest-pull\n\n\nrerere\n\n\nreset\n\n\nrevert\n\n\nrev-list\n\n\nrev-parse\n\n\nrm\n\n\nsend-email\n\n\nsend-pack\n\n\nshell\n\n\nsh-i18n\n\n\nsh-i18n--envsubst\n\n\nshortlog\n\n\nshow\n\n\nshow-branch\n\n\nshow-index\n\n\nshow-ref\n\n\nsh-setup\n\n\nstage\n\n\nstash\n\n\nstatus\n\n\nstripspace\n\n\nsubmodule\n\n\nsubmodule--helper\n\n\nsubtree\n\n\nsvn\n\n\nsymbolic-ref\n\n\ntag\n\n\nunpack-file\n\n\nunpack-objects\n\n\nupdate-index\n\n\nupdate-ref\n\n\nupdate-server-info\n\n\nupload-archive\n\n\nupload-pack\n\n\nvar\n\n\nverify-commit\n\n\nverify-pack\n\n\nverify-tag\n\n\nweb--browse\n\n\nwhatchanged\n\n\nworktree\n\n\nwrite-tree\n\n\nmergetools",
            "title": "Comandos"
        },
        {
            "location": "/comandos/#lista-de-comandos",
            "text": "Git conta com v\u00e1rios comandos, a lista completa se encontra em\n/lib/git-core.  Para mais detalhes do que como cada um opera pode utilizar  man git commando\ngit commando --help",
            "title": "Lista de Comandos"
        },
        {
            "location": "/comandos/#comandos-existentes",
            "text": "git  add  add--interactive  am  annotate  apply  archimport  archive  bisect  bisect--helper  blame  branch  bundle  cat-file  check-attr  check-ignore  check-mailmap  checkout  checkout-index  check-ref-format  cherry  cherry-pick  citool  clean  clone  column  commit  commit-tree  config  count-objects  credential  credential-cache  credential-cache--daemon  credential-gnome-keyring  credential-libsecret  credential-store  cvsexportcommit  cvsimport  cvsserver  daemon  describe  diff  diff-files  diff-index  difftool  difftool--helper  diff-tree  draw  fast-export  fast-import  fetch  fetch-pack  filter-branch  fmt-merge-msg  for-each-ref  format-patch  fsck  fsck-objects  gc  get-tar-commit-id  grep  gui  gui--askpass  hash-object  help  http-backend  http-fetch  http-push  imap-send  index-pack  init  init-db  instaweb  interpret-trailers  log  ls-files  ls-remote  ls-tree  mailinfo  mailsplit  merge  merge-base  merge-file  merge-index  merge-octopus  merge-one-file  merge-ours  merge-recursive  merge-resolve  merge-subtree  mergetool  mergetool--lib  merge-tree  mktag  mktree  mv  name-rev  notes  p4  pack-objects  pack-redundant  pack-refs  parse-remote  patch-id  prune  prune-packed  pull  push  quiltimport  read-tree  rebase  rebase--am  rebase--interactive  rebase--merge  receive-pack  reflog  remote  remote-ext  remote-fd  remote-ftp  remote-ftps  remote-http  remote-https  remote-testsvn  repack  replace  request-pull  rerere  reset  revert  rev-list  rev-parse  rm  send-email  send-pack  shell  sh-i18n  sh-i18n--envsubst  shortlog  show  show-branch  show-index  show-ref  sh-setup  stage  stash  status  stripspace  submodule  submodule--helper  subtree  svn  symbolic-ref  tag  unpack-file  unpack-objects  update-index  update-ref  update-server-info  upload-archive  upload-pack  var  verify-commit  verify-pack  verify-tag  web--browse  whatchanged  worktree  write-tree  mergetools",
            "title": "Comandos existentes"
        },
        {
            "location": "/inicializando-projeto/",
            "text": "Init\n\n\nPara inicializar um projeto git\n\n\nS\u00e3o criados arquivos na pasta .git com os\ndados versionados.\n\n\ngit init $DIRETORIO\n\n\n\n\n\nPara uma lista dos arquivos criados pelo git:\n\n\ncd /tmp\ngit init foo\nfind .\n\n\n\n\nConfig\n\n\ngit config --global user.name \"John Doe\"\ngit config --global user.email johndoe@example.com",
            "title": "Inicializando um projeto"
        },
        {
            "location": "/inicializando-projeto/#init",
            "text": "Para inicializar um projeto git  S\u00e3o criados arquivos na pasta .git com os\ndados versionados.  git init $DIRETORIO  Para uma lista dos arquivos criados pelo git:  cd /tmp\ngit init foo\nfind .",
            "title": "Init"
        },
        {
            "location": "/inicializando-projeto/#config",
            "text": "git config --global user.name \"John Doe\"\ngit config --global user.email johndoe@example.com",
            "title": "Config"
        },
        {
            "location": "/criando-historico/",
            "text": "Add\n\n\nGit add adiciona arquivos a uma \u00e1rea tempor\u00e1ria\npara compor um commit (staging).\n\n\ngit add $ARQUIVO|$DIRETORIO\n\n\n\n\nCommit\n\n\nCada mudan\u00e7a no hist\u00f3rico de um projeto \u00e9 representado por um\ncommit. \ngit show\n mostra o  \u00faltimo commit.\n\n\nPara uma lista completa dos commits use: \ngit log\n.\n\n\ngit commit\n\n\n\n\nO commit transfere as informa\u00e7\u00f5es para o reposit\u00f3rio local.\n\n\nBoas pr\u00e1ticas de nomenclatura de commits\nhttps://www.alexkras.com/19-git-tips-for-everyday-use/#good-commit-message\n\n\nStatus\n\n\ngit status\ngit status -s  #vers\u00e3o resumida",
            "title": "Criando Hist\u00f3rico"
        },
        {
            "location": "/criando-historico/#add",
            "text": "Git add adiciona arquivos a uma \u00e1rea tempor\u00e1ria\npara compor um commit (staging).  git add $ARQUIVO|$DIRETORIO",
            "title": "Add"
        },
        {
            "location": "/criando-historico/#commit",
            "text": "Cada mudan\u00e7a no hist\u00f3rico de um projeto \u00e9 representado por um\ncommit.  git show  mostra o  \u00faltimo commit.  Para uma lista completa dos commits use:  git log .  git commit  O commit transfere as informa\u00e7\u00f5es para o reposit\u00f3rio local.  Boas pr\u00e1ticas de nomenclatura de commits\nhttps://www.alexkras.com/19-git-tips-for-everyday-use/#good-commit-message",
            "title": "Commit"
        },
        {
            "location": "/criando-historico/#status",
            "text": "git status\ngit status -s  #vers\u00e3o resumida",
            "title": "Status"
        },
        {
            "location": "/patches/",
            "text": "Format patch\n\n\nPatches s\u00e3o mudan\u00e7as que podem ser transferidas de um reposit\u00f3rio\npara outro:\n\n\nPara criar um patch do \u00faltimo commit:\n\n\ngit format-patch master\n\n\n\n\n\nAppy\n\n\nPara aplicar um patch:\n\n\ncurl -L https://goo.gl/p1LEc7 -o 0001-historia.patch\ngit apply 0001-historia.patch\n\n\n\n\nDiff e show\n\n\nO resultado de \ngit show\n e \ngit diff\n tamb\u00e9m s\u00e3o comapat\u00edveis com \npatches do git.\n\n\ngit diff > my_patch.patch\ngit show > my_patch.patch\ngit diff --cached > my_patch.patch\n\n\n\n\n\nCriar um patch de uma branch\n\n\ngit format-patch master",
            "title": "Patches"
        },
        {
            "location": "/patches/#format-patch",
            "text": "Patches s\u00e3o mudan\u00e7as que podem ser transferidas de um reposit\u00f3rio\npara outro:  Para criar um patch do \u00faltimo commit:  git format-patch master",
            "title": "Format patch"
        },
        {
            "location": "/patches/#appy",
            "text": "Para aplicar um patch:  curl -L https://goo.gl/p1LEc7 -o 0001-historia.patch\ngit apply 0001-historia.patch",
            "title": "Appy"
        },
        {
            "location": "/patches/#diff-e-show",
            "text": "O resultado de  git show  e  git diff  tamb\u00e9m s\u00e3o comapat\u00edveis com \npatches do git.  git diff > my_patch.patch\ngit show > my_patch.patch\ngit diff --cached > my_patch.patch",
            "title": "Diff e show"
        },
        {
            "location": "/patches/#criar-um-patch-de-uma-branch",
            "text": "git format-patch master",
            "title": "Criar um patch de uma branch"
        },
        {
            "location": "/branches/",
            "text": "Uma branch \u00e9 uma linha de trabalho independente. Podem ser usadas para diversos prop\u00f3sitos.\n\n\nPode-se ter uma branch para:\n\n\n\n\nexperimentar uma tecnologia nova;\n\n\numa branch para um bug-fix;\n\n\noutra para o trabalho do sprint;\n\n\n\n\nA branch padr\u00e3o no git \u00e9 a \nmaster\n. Para listar todas as branches\nuse: \ngit branch\n\n\ngit commit \"informa\u00e7\u00f5es sobre branches no master\"\ngit checkout -b \"recursos_adicionais\" #cria outra linha de trabalho\ncurl -L https://goo.gl/XlMc3m -o 0001-recursos_adicionais.patch\ngit apply 0001-recursos_adicionais.patch\n\n\n\n\nO comando checkout serve para criar a branch e entrar nela.\n\n\nMerge\n\n\nMerge mescla o conte\u00fado de branches\n\n\ngit commit -m \"mais modifica\u00e7\u00f5es\"\ngit merge recursos_adicionais\ngit log\n\n\n\n\nFluxos de trabalho\n\n\nExistem v\u00e1rios fluxos de trabalho de branches.\n\n\n\n\nGithubflow\n\n\ngit flow\n\n\nbranch por t\u00f3pico\n\n\n\n\nMais sobre fluxos de trabalho\n\n\n\n\nhttps://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows#_distributed_git\n\n\nhttps://git-scm.com/book/en/v2/Git-Branching-Branching-Workflows",
            "title": "Branches"
        },
        {
            "location": "/branches/#merge",
            "text": "Merge mescla o conte\u00fado de branches  git commit -m \"mais modifica\u00e7\u00f5es\"\ngit merge recursos_adicionais\ngit log",
            "title": "Merge"
        },
        {
            "location": "/branches/#fluxos-de-trabalho",
            "text": "Existem v\u00e1rios fluxos de trabalho de branches.   Githubflow  git flow  branch por t\u00f3pico   Mais sobre fluxos de trabalho   https://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows#_distributed_git  https://git-scm.com/book/en/v2/Git-Branching-Branching-Workflows",
            "title": "Fluxos de trabalho"
        },
        {
            "location": "/merges/",
            "text": "Fast-forward: move o ponteiro da master para o \u00faltimo commit da\nbranch.\n\n\ngit merge --fast-forward\n\n\n\n\n\nResolvendo com nossas altera\u00e7\u00f5es\n\n\ngit pull origin master -X ours\n\n\n\n\n\nMostrando o conte\u00fado de um commit\n\n\ngit show commitId",
            "title": "Merges"
        },
        {
            "location": "/merges/#resolvendo-com-nossas-alteracoes",
            "text": "git pull origin master -X ours",
            "title": "Resolvendo com nossas altera\u00e7\u00f5es"
        },
        {
            "location": "/merges/#mostrando-o-conteudo-de-um-commit",
            "text": "git show commitId",
            "title": "Mostrando o conte\u00fado de um commit"
        },
        {
            "location": "/desfazendo/",
            "text": "O que ainda n\u00e3o est\u00e1 comitado\n\n\ngit reset --hard HEAD\n\n\n\n\n\nRemover arquivos criados mas n\u00e3o versionados\n\n\ngit ls-files --others --exclude-standard | xargs rm\n\n\n\n\n\nRemover do staging\n\n\ngit reset HEAD $FILE\n\n\n\n\n\nRevert\n\n\nDesfaz um commit criando um novo commit. Recomendado em branches\np\u00fablicas onde o hist\u00f3rico n\u00e3o pode ser reescrito.\n\n\ngit checkout hotfix\ngit revert HEAD~2\n\n\n\n\n\nTrocar a \u00faltima mensagem de commit\n\n\ngit commit --amend\n\n\n\n\n\nDesfazendo \u00faltimos 3 commits - sem desfazer o c\u00f3digo\n\n\ngit reset --soft HEAD~3\n\n\n\n\n\nDesfazendo \u00faltimos 3 commits - desfazendo o c\u00f3digo\n\n\ngit reset --hard HEAD~3",
            "title": "Desfazendo"
        },
        {
            "location": "/desfazendo/#o-que-ainda-nao-esta-comitado",
            "text": "git reset --hard HEAD",
            "title": "O que ainda n\u00e3o est\u00e1 comitado"
        },
        {
            "location": "/desfazendo/#remover-arquivos-criados-mas-nao-versionados",
            "text": "git ls-files --others --exclude-standard | xargs rm",
            "title": "Remover arquivos criados mas n\u00e3o versionados"
        },
        {
            "location": "/desfazendo/#remover-do-staging",
            "text": "git reset HEAD $FILE",
            "title": "Remover do staging"
        },
        {
            "location": "/desfazendo/#revert",
            "text": "Desfaz um commit criando um novo commit. Recomendado em branches\np\u00fablicas onde o hist\u00f3rico n\u00e3o pode ser reescrito.  git checkout hotfix\ngit revert HEAD~2",
            "title": "Revert"
        },
        {
            "location": "/desfazendo/#trocar-a-ultima-mensagem-de-commit",
            "text": "git commit --amend",
            "title": "Trocar a \u00faltima mensagem de commit"
        },
        {
            "location": "/desfazendo/#desfazendo-ultimos-3-commits-sem-desfazer-o-codigo",
            "text": "git reset --soft HEAD~3",
            "title": "Desfazendo \u00faltimos 3 commits - sem desfazer o c\u00f3digo"
        },
        {
            "location": "/desfazendo/#desfazendo-ultimos-3-commits-desfazendo-o-codigo",
            "text": "git reset --hard HEAD~3",
            "title": "Desfazendo \u00faltimos 3 commits - desfazendo o c\u00f3digo"
        },
        {
            "location": "/remotos/",
            "text": "Git \u00e9 distriu\u00eddo.\n\n\nRemoto no filesystem local\n\n\ncd /path/to/git-docs\ncd ..\ngit clone git-docs other-git-docs\ncd other-git-docs\ngit config user.name \"other user\"\ngit config user.email other.user@gmail.com\n\n\n//do some work\ncd ../git-docs\ngit remote add other ../other-git-docs\ngit merge other/master\n\n\n\n\nRemoto online\n\n\nListar os reposit\u00f3rios remotos\n\n\ngit remote -v\n\n\n\n\n\nGit remote add origin\n\n\ngit remote add origin git@github.com:compufour/compufacil.git\ngit remote add origin https://github.com/user/repo.git\n\n\n\n\nMandar para o reposit\u00f3rio\n\n\ngit clone https://github.com/JeanCarloMachado/git-docs\ngit push origin new_branch\n\n\n\n\nBaixar do reposit\u00f3rio\n\n\ngit pull --rebase\n\n\n\n\n\nSetando remoto e branch padr\u00f5es\n\n\nPermite usar apenas \ngit push\n, ao inv\u00e9s de \ngit push origin\nmaster\n.\n\n\ngit branch --set-upstream-to myfork/master",
            "title": "Remotos"
        },
        {
            "location": "/remotos/#remoto-no-filesystem-local",
            "text": "cd /path/to/git-docs\ncd ..\ngit clone git-docs other-git-docs\ncd other-git-docs\ngit config user.name \"other user\"\ngit config user.email other.user@gmail.com\n\n\n//do some work\ncd ../git-docs\ngit remote add other ../other-git-docs\ngit merge other/master",
            "title": "Remoto no filesystem local"
        },
        {
            "location": "/remotos/#remoto-online",
            "text": "",
            "title": "Remoto online"
        },
        {
            "location": "/remotos/#listar-os-repositorios-remotos",
            "text": "git remote -v",
            "title": "Listar os reposit\u00f3rios remotos"
        },
        {
            "location": "/remotos/#git-remote-add-origin",
            "text": "git remote add origin git@github.com:compufour/compufacil.git\ngit remote add origin https://github.com/user/repo.git",
            "title": "Git remote add origin"
        },
        {
            "location": "/remotos/#mandar-para-o-repositorio",
            "text": "git clone https://github.com/JeanCarloMachado/git-docs\ngit push origin new_branch",
            "title": "Mandar para o reposit\u00f3rio"
        },
        {
            "location": "/remotos/#baixar-do-repositorio",
            "text": "git pull --rebase",
            "title": "Baixar do reposit\u00f3rio"
        },
        {
            "location": "/remotos/#setando-remoto-e-branch-padroes",
            "text": "Permite usar apenas  git push , ao inv\u00e9s de  git push origin\nmaster .  git branch --set-upstream-to myfork/master",
            "title": "Setando remoto e branch padr\u00f5es"
        },
        {
            "location": "/github/",
            "text": "GitHub \u00e9 uma rede social.\n\n\nPermite\n\n\n\n\nCriar reposit\u00f3rios\n\n\nColaborar para reposit\u00f3rios existentes:\n\n\nCriando issues\n\n\nSubmitando pull requests\n\n\n\n\n\n\n\n\nConfigurar ssh keys\n\n\nOutros Servi\u00e7os\n\n\nGithubio Pages\n\n\nHospedar um site com seu usu\u00e1rio.\n\n\nGists\n\n\nTipo pastebin",
            "title": "Github"
        },
        {
            "location": "/github/#permite",
            "text": "Criar reposit\u00f3rios  Colaborar para reposit\u00f3rios existentes:  Criando issues  Submitando pull requests",
            "title": "Permite"
        },
        {
            "location": "/github/#configurar-ssh-keys",
            "text": "",
            "title": "Configurar ssh keys"
        },
        {
            "location": "/github/#outros-servicos",
            "text": "",
            "title": "Outros Servi\u00e7os"
        },
        {
            "location": "/github/#githubio-pages",
            "text": "Hospedar um site com seu usu\u00e1rio.",
            "title": "Githubio Pages"
        },
        {
            "location": "/github/#gists",
            "text": "Tipo pastebin",
            "title": "Gists"
        },
        {
            "location": "/customizando/",
            "text": "As configura\u00e7\u00f5es globais ficam em\n\n\n~/.gitconfig\n\n\n\n\n\nEm reposit\u00f3rios\n\n\n.git/config\n\n\n\n\n\nCores\n\n\ngit config --global color.ui true\n\n\n\n\n\nSetar o editor padr\u00e3o\n\n\ngit config --global core.editor vim\n\n\n\n\n\nTrocar template de mensagem de commit\n\n\ngit config --global commit.template vim\n\n\n\n\n\nPager\n\n\ngit config --global core.pager 'less'\n\n\n\n\n\nAliases\n\n\ngit config --global alias.co checkout\n\n\n\n\n\nLogs\n\n\ngit config --global alias.hist \"log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short\"\ngit config --global alias.lol \"log --graph --decorate --pretty=oneline --abbrev-commit --all\"\ngit config --global alias.mylog \"log --pretty=format:'%h %s [%an]' --graph\"",
            "title": "Customizando"
        },
        {
            "location": "/customizando/#cores",
            "text": "git config --global color.ui true",
            "title": "Cores"
        },
        {
            "location": "/customizando/#setar-o-editor-padrao",
            "text": "git config --global core.editor vim",
            "title": "Setar o editor padr\u00e3o"
        },
        {
            "location": "/customizando/#trocar-template-de-mensagem-de-commit",
            "text": "git config --global commit.template vim",
            "title": "Trocar template de mensagem de commit"
        },
        {
            "location": "/customizando/#pager",
            "text": "git config --global core.pager 'less'",
            "title": "Pager"
        },
        {
            "location": "/customizando/#aliases",
            "text": "git config --global alias.co checkout",
            "title": "Aliases"
        },
        {
            "location": "/customizando/#logs",
            "text": "git config --global alias.hist \"log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short\"\ngit config --global alias.lol \"log --graph --decorate --pretty=oneline --abbrev-commit --all\"\ngit config --global alias.mylog \"log --pretty=format:'%h %s [%an]' --graph\"",
            "title": "Logs"
        },
        {
            "location": "/ferramentas-auxiliares-e-produtividade/",
            "text": "Ferramentas & Produtividade\n\n\nStash\n\n\nPara salvar trabalhos tempor\u00e1rios\n\n\ngit stash\ngit stash apply\n\n\n\n\n\nVisualizar o stash\n\n\ngit stash show -p\n\n\n\n\n\nGitk\n\n\nUma interface nativa para quem gosta de interfaces gr\u00e1ficas\n\n\nBash aliases\n\n\nalias amend='git commit --amend'\nalias b='git branch'\nalias branch='git branch'\nalias check='export PREV_BRANCH=`cb` && git checkout'\nalias cm='git commit'\nalias cm='git status && git add . && git commit -m \"'\nalias g='git'\nalias ga='git add'\nalias gac='git-add-commit'\nalias gb='git branch'\nalias gbi='git bisect'\nalias gc='git commit'\nalias gck='git checkout'\nalias gckm='git checkout master'\nalias gckm='git checkout master'\nalias gdf='git diff'\nalias gdfn='git --no-pager diff --name-only'\nalias gf='git fetch'\nalias gfc='git fetch && git checkout'\nalias gh='git rev-parse HEAD'\nalias git-manual='chromium /home/jean/projects/git/Documentation/user-manual.html'\nalias git-show-files='git diff-tree --no-commit-id --name-only -r'\nalias git='hub'\nalias gl=\"git log --pretty=oneline\"\nalias gm='git merge'\nalias gp='git push'\nalias gr='git remote'\nalias grh='git reset --hard HEAD'\nalias grhh='git reset --hard HEAD'\nalias gs='git status -s'\nalias gt='git tag'\nalias lcb='git pull origin `cb`'\nalias lom='echo \"Consider using: [git pull --rebase] instead\" ; git pull origin master'\nalias lr='git pull compufacil master  --rebase'\nalias pcb='git push origin `cb`'\nalias status='git status'\n\n\n\n\n\nFun\u00e7\u00f5es\n\n\ncurrent_branch() {\n    git branch 2> /dev/null | grep \"*\" | cut -d\" \" -f2\n}\n\ncommit_diff () {\n    git diff $1~ $1\n}\n\nnot_committed_files () {\n    git ls-files --others --exclude-standard\n}\n\ncommit_count () {\n    git log --pretty=oneline | wc -l\n}\n\n\nlast_diff_file() {\n    last_diff=${2:-1}\n    file_name=$1\n    git log -p --follow -$last_diff $file_name\n}",
            "title": "Ferramentas Auxiliares"
        },
        {
            "location": "/ferramentas-auxiliares-e-produtividade/#ferramentas-produtividade",
            "text": "",
            "title": "Ferramentas &amp; Produtividade"
        },
        {
            "location": "/ferramentas-auxiliares-e-produtividade/#stash",
            "text": "Para salvar trabalhos tempor\u00e1rios  git stash\ngit stash apply",
            "title": "Stash"
        },
        {
            "location": "/ferramentas-auxiliares-e-produtividade/#visualizar-o-stash",
            "text": "git stash show -p",
            "title": "Visualizar o stash"
        },
        {
            "location": "/ferramentas-auxiliares-e-produtividade/#gitk",
            "text": "Uma interface nativa para quem gosta de interfaces gr\u00e1ficas",
            "title": "Gitk"
        },
        {
            "location": "/ferramentas-auxiliares-e-produtividade/#bash-aliases",
            "text": "alias amend='git commit --amend'\nalias b='git branch'\nalias branch='git branch'\nalias check='export PREV_BRANCH=`cb` && git checkout'\nalias cm='git commit'\nalias cm='git status && git add . && git commit -m \"'\nalias g='git'\nalias ga='git add'\nalias gac='git-add-commit'\nalias gb='git branch'\nalias gbi='git bisect'\nalias gc='git commit'\nalias gck='git checkout'\nalias gckm='git checkout master'\nalias gckm='git checkout master'\nalias gdf='git diff'\nalias gdfn='git --no-pager diff --name-only'\nalias gf='git fetch'\nalias gfc='git fetch && git checkout'\nalias gh='git rev-parse HEAD'\nalias git-manual='chromium /home/jean/projects/git/Documentation/user-manual.html'\nalias git-show-files='git diff-tree --no-commit-id --name-only -r'\nalias git='hub'\nalias gl=\"git log --pretty=oneline\"\nalias gm='git merge'\nalias gp='git push'\nalias gr='git remote'\nalias grh='git reset --hard HEAD'\nalias grhh='git reset --hard HEAD'\nalias gs='git status -s'\nalias gt='git tag'\nalias lcb='git pull origin `cb`'\nalias lom='echo \"Consider using: [git pull --rebase] instead\" ; git pull origin master'\nalias lr='git pull compufacil master  --rebase'\nalias pcb='git push origin `cb`'\nalias status='git status'",
            "title": "Bash aliases"
        },
        {
            "location": "/ferramentas-auxiliares-e-produtividade/#funcoes",
            "text": "current_branch() {\n    git branch 2> /dev/null | grep \"*\" | cut -d\" \" -f2\n}\n\ncommit_diff () {\n    git diff $1~ $1\n}\n\nnot_committed_files () {\n    git ls-files --others --exclude-standard\n}\n\ncommit_count () {\n    git log --pretty=oneline | wc -l\n}\n\n\nlast_diff_file() {\n    last_diff=${2:-1}\n    file_name=$1\n    git log -p --follow -$last_diff $file_name\n}",
            "title": "Fun\u00e7\u00f5es"
        },
        {
            "location": "/criando_servidor/",
            "text": "Criando um server remoto\n\n\nRemoto no filesystem local\n\n\ncd /path/to/git-docs\ncd ..\ngit clone git-docs other-git-docs\ncd other-git-docs\ngit config user.name \"other user\"\ngit config user.email other.user@gmail.com\n\n\n//do some work\ncd ../git-docs\ngit remote add other ../other-git-docs\ngit merge other/master\n\n\n\n\nBare\n\n\nN\u00e3o tem working dir.\n\n\ncd /tmp/\nmkdir foo\ngit init . --bare\ngit clone root@45.55.247.185:/tmp/foo /tmp/foo_clone",
            "title": "Criando um servidor git"
        },
        {
            "location": "/criando_servidor/#criando-um-server-remoto",
            "text": "",
            "title": "Criando um server remoto"
        },
        {
            "location": "/criando_servidor/#remoto-no-filesystem-local",
            "text": "cd /path/to/git-docs\ncd ..\ngit clone git-docs other-git-docs\ncd other-git-docs\ngit config user.name \"other user\"\ngit config user.email other.user@gmail.com\n\n\n//do some work\ncd ../git-docs\ngit remote add other ../other-git-docs\ngit merge other/master",
            "title": "Remoto no filesystem local"
        },
        {
            "location": "/criando_servidor/#bare",
            "text": "N\u00e3o tem working dir.  cd /tmp/\nmkdir foo\ngit init . --bare\ngit clone root@45.55.247.185:/tmp/foo /tmp/foo_clone",
            "title": "Bare"
        },
        {
            "location": "/submodulos/",
            "text": "Criando um subm\u00f3dulo\n\n\ngit submodule add https://github.com/chaconinc/DbConnector\ngit submodule add ../mainrepo.git submoduleDir\n\ngit status\n\n\n\n\nBuscando os arquivos\n\n\ngit submodule init\ngit submodule update\n\n\n\n\n\nInicializando os subm\u00f3dulos em um reposit\u00f3rio j\u00e1 configurado\n\n\ngit clone --recursive\n\n\n\n\n\nMantendo atualizado\n\n\ngit config -f .gitmodules submodule.jeancarlomachado.github.io.branch master\n\ngit submodule update --remote\n\n\n\n\n\nForeach\n\n\n git submodule foreach \"git add . ; git commit -m 'added assets'\"\n\n\n\n\n\nPush\n\n\ngit config push.recurseSubmodules on-demand\ngit push\n\n\n\n\nDiff/Log\n\n\ngit $COMANDO --submodule",
            "title": "Subm\u00f3dulos"
        },
        {
            "location": "/submodulos/#criando-um-submodulo",
            "text": "git submodule add https://github.com/chaconinc/DbConnector\ngit submodule add ../mainrepo.git submoduleDir\n\ngit status",
            "title": "Criando um subm\u00f3dulo"
        },
        {
            "location": "/submodulos/#buscando-os-arquivos",
            "text": "git submodule init\ngit submodule update",
            "title": "Buscando os arquivos"
        },
        {
            "location": "/submodulos/#inicializando-os-submodulos-em-um-repositorio-ja-configurado",
            "text": "git clone --recursive",
            "title": "Inicializando os subm\u00f3dulos em um reposit\u00f3rio j\u00e1 configurado"
        },
        {
            "location": "/submodulos/#mantendo-atualizado",
            "text": "git config -f .gitmodules submodule.jeancarlomachado.github.io.branch master\n\ngit submodule update --remote",
            "title": "Mantendo atualizado"
        },
        {
            "location": "/submodulos/#foreach",
            "text": "git submodule foreach \"git add . ; git commit -m 'added assets'\"",
            "title": "Foreach"
        },
        {
            "location": "/submodulos/#push",
            "text": "git config push.recurseSubmodules on-demand\ngit push",
            "title": "Push"
        },
        {
            "location": "/submodulos/#difflog",
            "text": "git $COMANDO --submodule",
            "title": "Diff/Log"
        },
        {
            "location": "/operadores_relativos/",
            "text": "Operadores relativos\n\n\nHEAD@{5}\nHEAD@{yesterday}\nHEAD@{2.months.ago}\n\n\n\n\n\nSintaxe alternativa\n\n\ngit rev-parse 34ab345c70~2\ngit rev-parse HEAD~1\nHEAD~5\n\n\n\n\n\nTopo da branch atual\n\n\nHEAD\nHEAD~ == HEAD~1\n\n\n\n\n\nRefer\u00eancia a ancestrais\n\n\ngit rev-parse HEAD^\ngit rev-parse 2aad^^\n\n\n\n\n^^^ significa o primeiro pai do primeiro pai do primeiro pai\n\n\nPara funcionar o (^) nos zsh e bash sem necessitar escapar\n\n\nsetopt NO_NOMATCH\nsetopt NO_EXTENDED_GLOB",
            "title": "Operadores Relativos"
        },
        {
            "location": "/operadores_relativos/#operadores-relativos",
            "text": "HEAD@{5}\nHEAD@{yesterday}\nHEAD@{2.months.ago}",
            "title": "Operadores relativos"
        },
        {
            "location": "/operadores_relativos/#sintaxe-alternativa",
            "text": "git rev-parse 34ab345c70~2\ngit rev-parse HEAD~1\nHEAD~5",
            "title": "Sintaxe alternativa"
        },
        {
            "location": "/operadores_relativos/#topo-da-branch-atual",
            "text": "HEAD\nHEAD~ == HEAD~1",
            "title": "Topo da branch atual"
        },
        {
            "location": "/operadores_relativos/#referencia-a-ancestrais",
            "text": "git rev-parse HEAD^\ngit rev-parse 2aad^^  ^^^ significa o primeiro pai do primeiro pai do primeiro pai",
            "title": "Refer\u00eancia a ancestrais"
        },
        {
            "location": "/operadores_relativos/#para-funcionar-o-nos-zsh-e-bash-sem-necessitar-escapar",
            "text": "setopt NO_NOMATCH\nsetopt NO_EXTENDED_GLOB",
            "title": "Para funcionar o (^) nos zsh e bash sem necessitar escapar"
        },
        {
            "location": "/reescrevendo-historico/",
            "text": "Rebase\n\n\nColoca o hist\u00f3rico da branch atual no topo da branch \ntarget\n.\n\n\ngit rebase target\n\n\n\n\n\nA regra de ouro do rebase\n\n\nhttps://www.atlassian.com/git/tutorials/merging-vs-rebasing?section=the-golden-rule-of-rebasing\n\n\nSquash\n\n\ngit rebase -i\n\n\n\n\n\nOu\n\n\ngit merge --squash feature_branch\n\n\n\n\n\nEditar um commit anterior\n\n\n\n\nRebase no commit e marcar ele como editado\n\n\nComitar as altera\u00e7\u00f5es\n\n\nFazer um fix up no commit com seu pai\n\n\n\n\ngit rebase -i HEAD~3\n\n\n\n\n\nCriando dois commits a partir de 1\n\n\nrebase iterativo com edit\ngit reset HEAD^\n... add commit 2x\nrebase --continue\n\n\n\n\nRemovendo arquivos do \u00faltimo commit\n\n\ngit rm file_name",
            "title": "Reescrevendo Hist\u00f3rico"
        },
        {
            "location": "/reescrevendo-historico/#rebase",
            "text": "Coloca o hist\u00f3rico da branch atual no topo da branch  target .  git rebase target",
            "title": "Rebase"
        },
        {
            "location": "/reescrevendo-historico/#a-regra-de-ouro-do-rebase",
            "text": "https://www.atlassian.com/git/tutorials/merging-vs-rebasing?section=the-golden-rule-of-rebasing",
            "title": "A regra de ouro do rebase"
        },
        {
            "location": "/reescrevendo-historico/#squash",
            "text": "git rebase -i  Ou  git merge --squash feature_branch",
            "title": "Squash"
        },
        {
            "location": "/reescrevendo-historico/#editar-um-commit-anterior",
            "text": "Rebase no commit e marcar ele como editado  Comitar as altera\u00e7\u00f5es  Fazer um fix up no commit com seu pai   git rebase -i HEAD~3",
            "title": "Editar um commit anterior"
        },
        {
            "location": "/reescrevendo-historico/#criando-dois-commits-a-partir-de-1",
            "text": "rebase iterativo com edit\ngit reset HEAD^\n... add commit 2x\nrebase --continue",
            "title": "Criando dois commits a partir de 1"
        },
        {
            "location": "/reescrevendo-historico/#removendo-arquivos-do-ultimo-commit",
            "text": "git rm file_name",
            "title": "Removendo arquivos do \u00faltimo commit"
        },
        {
            "location": "/debug/",
            "text": "Blame\n\n\nMostra as \u00faltimas altera\u00e7\u00f5es de cada linha de arquivo com o autor.\n\n\n$ git blame -L 141,153 simplegit.rb\n\n\n\n\n\nGit n\u00e3o guarda renames explicitamente. Quando passado o -C git\ntenta identificar de onde o c\u00f3digo veio.\n\n\n$ git blame -C  GITPackUpload.m\n\n\n\n\n\nBisect\n\n\nFerramenta para descobrir qual commit quebrou uma feature.\n\n\ngit bisect start\ngit bisect bad commitid\ngit bisect good commitid\n\n\n\n\n\ngit bisect reset\n\n\nAutomate bisect:\n\n\n$ git bisect start HEAD v1.0\n$ git bisect run test-error.sh",
            "title": "Debug"
        },
        {
            "location": "/debug/#blame",
            "text": "Mostra as \u00faltimas altera\u00e7\u00f5es de cada linha de arquivo com o autor.  $ git blame -L 141,153 simplegit.rb  Git n\u00e3o guarda renames explicitamente. Quando passado o -C git\ntenta identificar de onde o c\u00f3digo veio.  $ git blame -C  GITPackUpload.m",
            "title": "Blame"
        },
        {
            "location": "/debug/#bisect",
            "text": "Ferramenta para descobrir qual commit quebrou uma feature.  git bisect start\ngit bisect bad commitid\ngit bisect good commitid  git bisect reset  Automate bisect:  $ git bisect start HEAD v1.0\n$ git bisect run test-error.sh",
            "title": "Bisect"
        },
        {
            "location": "/manutencao/",
            "text": "Removendo arquivos do hist\u00f3rico\n\n\ngit filter-branch --tree-filter 'rm -rf passwords.txt' HEAD.\n\n\n\n\n\n git filter-branch --force --index-filter \\\n'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' \\\n--prune-empty --tag-name-filter cat -- --all\n\n\n\n\n\nFazendo garbage collection \"packfiles\"\n\n\ngit reflog expire --expire-unreachable=now --all\ngit gc --prune=now\n\n\n\n\nRemovendo branches j\u00e1 trabalhadas\n\n\ngit branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d",
            "title": "Manuten\u00e7\u00e3o"
        },
        {
            "location": "/manutencao/#removendo-arquivos-do-historico",
            "text": "git filter-branch --tree-filter 'rm -rf passwords.txt' HEAD.   git filter-branch --force --index-filter \\\n'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' \\\n--prune-empty --tag-name-filter cat -- --all",
            "title": "Removendo arquivos do hist\u00f3rico"
        },
        {
            "location": "/manutencao/#fazendo-garbage-collection-packfiles",
            "text": "git reflog expire --expire-unreachable=now --all\ngit gc --prune=now",
            "title": "Fazendo garbage collection \"packfiles\""
        },
        {
            "location": "/manutencao/#removendo-branches-ja-trabalhadas",
            "text": "git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d",
            "title": "Removendo branches j\u00e1 trabalhadas"
        },
        {
            "location": "/recuperando_dados/",
            "text": "Git s\u00f3 deleta objetos quando voc\u00ea faz um \ngit gc\n.\n\n\nEncontrando objetos soltos\n\n\ngit fsck --unreachable",
            "title": "Recuperando dados"
        },
        {
            "location": "/recuperando_dados/#encontrando-objetos-soltos",
            "text": "git fsck --unreachable",
            "title": "Encontrando objetos soltos"
        },
        {
            "location": "/pumbling/",
            "text": "Pumbling \u00e9 o complemento da \"porcelain\". Que \u00e9 um conjunto de\ncomandos que existem para compor outros comandos.\n\n\n\n\nCriando objeto\n\n\necho \"test content\" | git hash-object -w --stdin\n\nfind_date\ncat $(run_function object_path d670) | zlib-flate -uncompress\n\n\ngit hash-object -w test.txt\n\n\n\n\nCat-file\n\n\nRetornar o tipo\n\n\ngit cat-file -t object_id\n\n\n\n\n\nRetornar o conte\u00fado\n\n\ngit cat-file -p object_id\n\n\n\n\n\nAtualizando o index\n\n\ngit update-index --add --cacheinfo 100644 objectHash fileName.txt\ngit write-tree\n\n\n\n\nAdicionando \u00e1rvores aninhadas\n\n\ngit read-tree --prefix=nomeDaPasta d8329fc1cc938780ffdd9f94e0d364e0ea74f579\n\n\n\n\n\nComitando\n\n\necho \"first commit message\" | git commit-tree treeHash\n\n\n\n\n\nCommit com pai\n\n\ncho \"commit second\" | git commit-tree 0155eb4229851634a0f03eb265b69f5a2d56f341 -p 035de1de9c497bdcf9bbbdbaab8e5902e3711ce2\n\n\n\n\n\nCriando branch\n\n\necho \"2016cc9fb2a892886946fe2ab4354ec9d40f181d\" > .git/refs/heads/master\n\n\n\n\n\nCriando a HEAD\n\n\n echo \"ref: refs/heads/master\" > .git/HEAD\n\n\n\n\nCriando um objeto manualmente\n\n\nVisualizar o conte\u00fado comprimido\n\n\ncat .git/objects/28/e697e796c79e4c86fcb62e5319a43dfcf1fb83 | zlib-flate -uncompress\n\n\n\n\n\n\nTipos de objetos\n\n\n\n\nblob\n\n\ntree\n\n\ncommit\n\n\ntag\n\n\n\n\nA \u00e1rvore mais recente\n\n\ngit cat-file -p master^{tree}\n\n\n\n\n\nCommit iterativo\n\n\nirb\ncontent = \"what is up, doc?\"\nheader = \"blob #{content.length}\\0\"\nrequire \"digest/sha1\"\nstore = header + content\nsha1 = Digest::SHA1.hexdigest(store)\nrequire 'zlib'\nzlib_content = Zlib::Deflate.deflate(store)\npath = '.git/objects/' + sha1[0,2] + '/' + sha1[2,38]\nrequire 'fileutils'\nFileUtils.mkdir_p(File.dirname(path))\nFile.open(path, 'w') {|f| f.write zlib_content}\n\n\n\n\nInspecionando objetos\n\n\ncat .git/objects/28/e697e796c79e4c86fcb62e5319a43dfcf1fb83 | zlib-flate -uncompress",
            "title": "Pumbling"
        },
        {
            "location": "/pumbling/#criando-objeto",
            "text": "echo \"test content\" | git hash-object -w --stdin\n\nfind_date\ncat $(run_function object_path d670) | zlib-flate -uncompress\n\n\ngit hash-object -w test.txt",
            "title": "Criando objeto"
        },
        {
            "location": "/pumbling/#cat-file",
            "text": "",
            "title": "Cat-file"
        },
        {
            "location": "/pumbling/#retornar-o-tipo",
            "text": "git cat-file -t object_id",
            "title": "Retornar o tipo"
        },
        {
            "location": "/pumbling/#retornar-o-conteudo",
            "text": "git cat-file -p object_id",
            "title": "Retornar o conte\u00fado"
        },
        {
            "location": "/pumbling/#atualizando-o-index",
            "text": "git update-index --add --cacheinfo 100644 objectHash fileName.txt\ngit write-tree",
            "title": "Atualizando o index"
        },
        {
            "location": "/pumbling/#adicionando-arvores-aninhadas",
            "text": "git read-tree --prefix=nomeDaPasta d8329fc1cc938780ffdd9f94e0d364e0ea74f579",
            "title": "Adicionando \u00e1rvores aninhadas"
        },
        {
            "location": "/pumbling/#comitando",
            "text": "echo \"first commit message\" | git commit-tree treeHash",
            "title": "Comitando"
        },
        {
            "location": "/pumbling/#commit-com-pai",
            "text": "cho \"commit second\" | git commit-tree 0155eb4229851634a0f03eb265b69f5a2d56f341 -p 035de1de9c497bdcf9bbbdbaab8e5902e3711ce2",
            "title": "Commit com pai"
        },
        {
            "location": "/pumbling/#criando-branch",
            "text": "echo \"2016cc9fb2a892886946fe2ab4354ec9d40f181d\" > .git/refs/heads/master",
            "title": "Criando branch"
        },
        {
            "location": "/pumbling/#criando-a-head",
            "text": "echo \"ref: refs/heads/master\" > .git/HEAD",
            "title": "Criando a HEAD"
        },
        {
            "location": "/pumbling/#criando-um-objeto-manualmente",
            "text": "",
            "title": "Criando um objeto manualmente"
        },
        {
            "location": "/pumbling/#visualizar-o-conteudo-comprimido",
            "text": "cat .git/objects/28/e697e796c79e4c86fcb62e5319a43dfcf1fb83 | zlib-flate -uncompress",
            "title": "Visualizar o conte\u00fado comprimido"
        },
        {
            "location": "/pumbling/#tipos-de-objetos",
            "text": "blob  tree  commit  tag",
            "title": "Tipos de objetos"
        },
        {
            "location": "/pumbling/#a-arvore-mais-recente",
            "text": "git cat-file -p master^{tree}",
            "title": "A \u00e1rvore mais recente"
        },
        {
            "location": "/pumbling/#commit-iterativo",
            "text": "irb\ncontent = \"what is up, doc?\"\nheader = \"blob #{content.length}\\0\"\nrequire \"digest/sha1\"\nstore = header + content\nsha1 = Digest::SHA1.hexdigest(store)\nrequire 'zlib'\nzlib_content = Zlib::Deflate.deflate(store)\npath = '.git/objects/' + sha1[0,2] + '/' + sha1[2,38]\nrequire 'fileutils'\nFileUtils.mkdir_p(File.dirname(path))\nFile.open(path, 'w') {|f| f.write zlib_content}",
            "title": "Commit iterativo"
        },
        {
            "location": "/pumbling/#inspecionando-objetos",
            "text": "cat .git/objects/28/e697e796c79e4c86fcb62e5319a43dfcf1fb83 | zlib-flate -uncompress",
            "title": "Inspecionando objetos"
        },
        {
            "location": "/comandosmenos_comuns/",
            "text": "Rev-parse\n\n\nRetorna o commit que algo est\u00e1 apontando.\n\n\ngit rev-parse master\ngit rev-parse HEAD\ncat .git/HEAD\n\n\n\n\nReflog\n\n\nMostra um log dos comandos usados no reposit\u00f3rio. Similar ao\n.bash_history (para opera\u00e7\u00f5es locais)\n\n\ngit reflog\n\nou\n\ngit log -g\n\n\n\n\nCherry-Pick\n\n\nPermite aplicar um \u00fanico commit de outra branch.\n\n\ngit cherry-pick\n\n\n\n\n\nArchive the repository\n\n\ngit archive --format zip --output /full/path/to/zipfile.zip master \ngit archive master --format=tar --output=../website-12-10-2012.tar\n\n\n\n\n\nBundle\n\n\ngit bundle create ../repo.bundle master\ngit bundle unbundle ../repo.bundle master\n\n\n\n\n\nMant\u00e9m o hist\u00f3rico.\n\n\nMerge de m\u00faltiplas branches\n\n\noctopus merge\n\n\nours\nhttp://stackoverflow.com/questions/16208144/how-do-i-merge-multiple-branches-into-master\n\n\nStaging parcial\n\n\ngit add -p\n\n\n\n\n\nGUI para fazer merge\n\n\n git mergetool\n\n\n\n\n\nGit grep\n\n\nProcura pro conte\u00fado de commits\n\n\ngit grep -i \"linux\" $(git rev-list --all )\ngit grep <regexp> $(git rev-list --all -- lib/util) -- lib/util\n\n\n\n\nRemover arquivos n\u00e3o versionados\n\n\ngit clean -f\n\n\n\n\n\n\u00daltimas N altera\u00e7\u00f5es em um arquivo\n\n\ngit log -p --follow -2 Backend/module/Api/src/Api/Service/ErrorProcessor.php\n\n\n\n\nDiferen\u00e7a entre branches\n\n\nTodos os commits que est\u00e3o na branch develop mas n\u00e3o est\u00e3o na master\n\n\ngit log master..experiment ==  git log ^master experiment == git\nlog experiment --not master\n\n\n\n\n\nLista de objetos\n\n\ngit rev-parse issue_2..master\n\n4f298373ba0f536115051593bd149539d367937d\n^2f35c9c5cc4ad413970d666d0f90b66d3cbf89c7\n<0:git-course:/home/jean/projects/git-docs:master:> git rev-parse master..issue_2\n\n2f35c9c5cc4ad413970d666d0f90b66d3cbf89c7\n^4f298373ba0f536115051593bd149539d367937d\n<0:git-course:/home/jean/projects/git-docs:master:>\n\n\n\n\n\nQue est\u00e1 em uma branch mas n\u00e3o est\u00e1 na outra (xor)\n\n\ngit log master...experimento\n\n\n\n\n\nEst\u00e1 em um mas n\u00e3o no outro. --left-right mostra que lado cada um\nse encontra.\n\n\nLog de outra branch\n\n\ngit log branch_foo\ngit log <branch> -- <path/to/file>\n\n\n\n\n\nQue est\u00e1 no local mas n\u00e3o est\u00e1 na origin\n\n\ngit log origin/master..master --stat\n\n\n\n\n\nQue est\u00e1 na master mas n\u00e3o est\u00e1 local\n\n\ngit log origin/master..master --stat\n\n\n\n\n\nWho are the children of a commit\n\n\n git rev-list --all --not 7ef306ff3ef3cfe694fbf3847f2c35c86067ee87^@ --children | grep \"^7ef306ff3ef3cfe694fbf3847f2c35c86067ee87\"",
            "title": "Comandos Menos comuns"
        },
        {
            "location": "/comandosmenos_comuns/#rev-parse",
            "text": "Retorna o commit que algo est\u00e1 apontando.  git rev-parse master\ngit rev-parse HEAD\ncat .git/HEAD",
            "title": "Rev-parse"
        },
        {
            "location": "/comandosmenos_comuns/#reflog",
            "text": "Mostra um log dos comandos usados no reposit\u00f3rio. Similar ao\n.bash_history (para opera\u00e7\u00f5es locais)  git reflog\n\nou\n\ngit log -g",
            "title": "Reflog"
        },
        {
            "location": "/comandosmenos_comuns/#cherry-pick",
            "text": "Permite aplicar um \u00fanico commit de outra branch.  git cherry-pick",
            "title": "Cherry-Pick"
        },
        {
            "location": "/comandosmenos_comuns/#archive-the-repository",
            "text": "git archive --format zip --output /full/path/to/zipfile.zip master \ngit archive master --format=tar --output=../website-12-10-2012.tar",
            "title": "Archive the repository"
        },
        {
            "location": "/comandosmenos_comuns/#bundle",
            "text": "git bundle create ../repo.bundle master\ngit bundle unbundle ../repo.bundle master  Mant\u00e9m o hist\u00f3rico.",
            "title": "Bundle"
        },
        {
            "location": "/comandosmenos_comuns/#merge-de-multiplas-branches",
            "text": "octopus merge  ours\nhttp://stackoverflow.com/questions/16208144/how-do-i-merge-multiple-branches-into-master",
            "title": "Merge de m\u00faltiplas branches"
        },
        {
            "location": "/comandosmenos_comuns/#staging-parcial",
            "text": "git add -p",
            "title": "Staging parcial"
        },
        {
            "location": "/comandosmenos_comuns/#gui-para-fazer-merge",
            "text": "git mergetool",
            "title": "GUI para fazer merge"
        },
        {
            "location": "/comandosmenos_comuns/#git-grep",
            "text": "",
            "title": "Git grep"
        },
        {
            "location": "/comandosmenos_comuns/#procura-pro-conteudo-de-commits",
            "text": "git grep -i \"linux\" $(git rev-list --all )\ngit grep <regexp> $(git rev-list --all -- lib/util) -- lib/util",
            "title": "Procura pro conte\u00fado de commits"
        },
        {
            "location": "/comandosmenos_comuns/#remover-arquivos-nao-versionados",
            "text": "git clean -f",
            "title": "Remover arquivos n\u00e3o versionados"
        },
        {
            "location": "/comandosmenos_comuns/#ultimas-n-alteracoes-em-um-arquivo",
            "text": "git log -p --follow -2 Backend/module/Api/src/Api/Service/ErrorProcessor.php",
            "title": "\u00daltimas N altera\u00e7\u00f5es em um arquivo"
        },
        {
            "location": "/comandosmenos_comuns/#diferenca-entre-branches",
            "text": "",
            "title": "Diferen\u00e7a entre branches"
        },
        {
            "location": "/comandosmenos_comuns/#todos-os-commits-que-estao-na-branch-develop-mas-nao-estao-na-master",
            "text": "git log master..experiment ==  git log ^master experiment == git\nlog experiment --not master",
            "title": "Todos os commits que est\u00e3o na branch develop mas n\u00e3o est\u00e3o na master"
        },
        {
            "location": "/comandosmenos_comuns/#lista-de-objetos",
            "text": "git rev-parse issue_2..master\n\n4f298373ba0f536115051593bd149539d367937d\n^2f35c9c5cc4ad413970d666d0f90b66d3cbf89c7\n<0:git-course:/home/jean/projects/git-docs:master:> git rev-parse master..issue_2\n\n2f35c9c5cc4ad413970d666d0f90b66d3cbf89c7\n^4f298373ba0f536115051593bd149539d367937d\n<0:git-course:/home/jean/projects/git-docs:master:>",
            "title": "Lista de objetos"
        },
        {
            "location": "/comandosmenos_comuns/#que-esta-em-uma-branch-mas-nao-esta-na-outra-xor",
            "text": "git log master...experimento  Est\u00e1 em um mas n\u00e3o no outro. --left-right mostra que lado cada um\nse encontra.",
            "title": "Que est\u00e1 em uma branch mas n\u00e3o est\u00e1 na outra (xor)"
        },
        {
            "location": "/comandosmenos_comuns/#log-de-outra-branch",
            "text": "git log branch_foo\ngit log <branch> -- <path/to/file>",
            "title": "Log de outra branch"
        },
        {
            "location": "/comandosmenos_comuns/#que-esta-no-local-mas-nao-esta-na-origin",
            "text": "git log origin/master..master --stat",
            "title": "Que est\u00e1 no local mas n\u00e3o est\u00e1 na origin"
        },
        {
            "location": "/comandosmenos_comuns/#que-esta-na-master-mas-nao-esta-local",
            "text": "git log origin/master..master --stat",
            "title": "Que est\u00e1 na master mas n\u00e3o est\u00e1 local"
        },
        {
            "location": "/comandosmenos_comuns/#who-are-the-children-of-a-commit",
            "text": "git rev-list --all --not 7ef306ff3ef3cfe694fbf3847f2c35c86067ee87^@ --children | grep \"^7ef306ff3ef3cfe694fbf3847f2c35c86067ee87\"",
            "title": "Who are the children of a commit"
        },
        {
            "location": "/estudos_de_caso/",
            "text": "Estudando fluxos de projetos open-source\n\n\n\n\nmaster\n\n\ndevelop\n\n\ntopic\n\n\n\n\nGit\n\n\n\n\nMailing list + patches\n\n\n\n\nKernel\n\n\n\n\nMailing list + patches\n\n\nMantenedores de sub-sistemas\n\n\n\n\nPHP\n\n\n\n\nGithub\n\n\nPull-requests\n\n\nContributing\n\n\n\n\nNode\n\n\n\n\nGithub\n\n\nPull-requests\n\n\nContributing\n\n\nCollaborator Guide",
            "title": "Estudos de caso"
        },
        {
            "location": "/estudos_de_caso/#estudando-fluxos-de-projetos-open-source",
            "text": "master  develop  topic",
            "title": "Estudando fluxos de projetos open-source"
        },
        {
            "location": "/estudos_de_caso/#git",
            "text": "Mailing list + patches",
            "title": "Git"
        },
        {
            "location": "/estudos_de_caso/#kernel",
            "text": "Mailing list + patches  Mantenedores de sub-sistemas",
            "title": "Kernel"
        },
        {
            "location": "/estudos_de_caso/#php",
            "text": "Github  Pull-requests  Contributing",
            "title": "PHP"
        },
        {
            "location": "/estudos_de_caso/#node",
            "text": "Github  Pull-requests  Contributing  Collaborator Guide",
            "title": "Node"
        },
        {
            "location": "/integracoes/",
            "text": "Integra\u00e7\u00f5es\n\n\nSoftware de terceiros que agregam funcionalidade ao github\n\nlista\n.\n\n\n\n\nWaffle\n\n\nBuildkite\n\n\nZenHub\n\n\n\n\nCodacy\n\n\nServi\u00e7os\n\n\nExecutam a\u00e7\u00f5es quando eventos acontecem em outras ferramentas.\n\n\n\n\nDocker\n\n\nDeploy aws",
            "title": "Integracoes"
        },
        {
            "location": "/integracoes/#integracoes",
            "text": "Software de terceiros que agregam funcionalidade ao github lista .   Waffle  Buildkite  ZenHub",
            "title": "Integra\u00e7\u00f5es"
        },
        {
            "location": "/integracoes/#codacy",
            "text": "",
            "title": "Codacy"
        },
        {
            "location": "/integracoes/#servicos",
            "text": "Executam a\u00e7\u00f5es quando eventos acontecem em outras ferramentas.   Docker  Deploy aws",
            "title": "Servi\u00e7os"
        },
        {
            "location": "/conceitos/",
            "text": "Hist\u00f3rico em grafo\n\n\nOs commits no git s\u00e3o estruturados em forma de grafo\n\n\n\n\n\u00c1reas de armazemanto do git\n\n\nGit tem 3 \u00e1reas de armazenamento principais\n\n\n\n\nStaging (index)\n\n\nReposit\u00f3rio Local\n\n\nReposit\u00f3rio Remoto\n\n\n\n\n\n\nFast-forward merge\n\n\nAcontece quando o hist\u00f3rico do merge est\u00e1 a frente do HEAD atual,\nent\u00e3o move-se apenas o ponteiro da branch.\n\n\nRecursive merge\n\n\n\u00c9 um merge de 3 vias.\n\n\nUsando os snapshots das duas branches e o ancestral comum dos\ndois.\n\n\n\u00c9 criado um commit com dois pais.\n\n\nYou might be best off looking for a description of a 3-way merge algorithm. A high-level description would go something like this:\n\nFind a suitable merge base B - a version of the file that is an ancestor of both of the new versions (X and Y), and usually the most recent such base (although there are cases where it will have to go back further, which is one of the features of  gits default recursive merge)\nPerform diffs of X with B and Y with B.\nWalk through the change blocks identified in the two diffs. If both sides introduce the same change in the same spot, accept either one; if one introduces a change and the other leaves that region alone, introduce the change in the final; if both introduce changes in a spot, but they don't match, mark a conflict to be resolved manually.\nThe full algorithm deals with this in a lot more detail, and even has some documentation (/usr/share/doc/git-doc/technical/trivial-merge.txt for one, along with the git help XXX pages, where XXX is one of merge-base, merge-file, merge, merge-one-file and possibly a few others). If that's not deep enough, there's always source code...\n\n\n\n\nPackfiles\n\n\nS\u00e3o arquivos \"otimizados\" para remover tamanho desenecess\u00e1rios do\nsistema.\n\n\n$ git verify-pack -v .git/objects/pack/pack-978e03944f5c581011e6998cd0e9e30000905586.idx\n\n\n\n\n\nTodo commit \u00e9 uma hash sha1 e muda conforme o pai for reescrito.\n\n\nHEAD\n\n\n\u00c9 a \u00faltima vers\u00e3o da branch atual.\nUtilizada pelo comando git commit para ser o pai do novo commit.",
            "title": "Conceitos"
        },
        {
            "location": "/conceitos/#historico-em-grafo",
            "text": "Os commits no git s\u00e3o estruturados em forma de grafo",
            "title": "Hist\u00f3rico em grafo"
        },
        {
            "location": "/conceitos/#areas-de-armazemanto-do-git",
            "text": "Git tem 3 \u00e1reas de armazenamento principais   Staging (index)  Reposit\u00f3rio Local  Reposit\u00f3rio Remoto",
            "title": "\u00c1reas de armazemanto do git"
        },
        {
            "location": "/conceitos/#fast-forward-merge",
            "text": "Acontece quando o hist\u00f3rico do merge est\u00e1 a frente do HEAD atual,\nent\u00e3o move-se apenas o ponteiro da branch.",
            "title": "Fast-forward merge"
        },
        {
            "location": "/conceitos/#recursive-merge",
            "text": "\u00c9 um merge de 3 vias.  Usando os snapshots das duas branches e o ancestral comum dos\ndois.  \u00c9 criado um commit com dois pais.  You might be best off looking for a description of a 3-way merge algorithm. A high-level description would go something like this:\n\nFind a suitable merge base B - a version of the file that is an ancestor of both of the new versions (X and Y), and usually the most recent such base (although there are cases where it will have to go back further, which is one of the features of  gits default recursive merge)\nPerform diffs of X with B and Y with B.\nWalk through the change blocks identified in the two diffs. If both sides introduce the same change in the same spot, accept either one; if one introduces a change and the other leaves that region alone, introduce the change in the final; if both introduce changes in a spot, but they don't match, mark a conflict to be resolved manually.\nThe full algorithm deals with this in a lot more detail, and even has some documentation (/usr/share/doc/git-doc/technical/trivial-merge.txt for one, along with the git help XXX pages, where XXX is one of merge-base, merge-file, merge, merge-one-file and possibly a few others). If that's not deep enough, there's always source code...",
            "title": "Recursive merge"
        },
        {
            "location": "/conceitos/#packfiles",
            "text": "S\u00e3o arquivos \"otimizados\" para remover tamanho desenecess\u00e1rios do\nsistema.  $ git verify-pack -v .git/objects/pack/pack-978e03944f5c581011e6998cd0e9e30000905586.idx  Todo commit \u00e9 uma hash sha1 e muda conforme o pai for reescrito.",
            "title": "Packfiles"
        },
        {
            "location": "/conceitos/#head",
            "text": "\u00c9 a \u00faltima vers\u00e3o da branch atual.\nUtilizada pelo comando git commit para ser o pai do novo commit.",
            "title": "HEAD"
        },
        {
            "location": "/recursos_adicionais/",
            "text": "Links\n\n\n\n\nRefer\u00eancia oficial\n\n\nMelhor tutorial de Git\n\n\nEncontrando issues no gitub\n\n\nGit para cientistas da computa\u00e7\u00e3o\n\n\n\n\nLivros\n\n\n\n\nGit Pro (o melhor)\n\n\nGit - Pragmatic bookshelf",
            "title": "Recursos Adicionais"
        },
        {
            "location": "/recursos_adicionais/#links",
            "text": "Refer\u00eancia oficial  Melhor tutorial de Git  Encontrando issues no gitub  Git para cientistas da computa\u00e7\u00e3o",
            "title": "Links"
        },
        {
            "location": "/recursos_adicionais/#livros",
            "text": "Git Pro (o melhor)  Git - Pragmatic bookshelf",
            "title": "Livros"
        }
    ]
}